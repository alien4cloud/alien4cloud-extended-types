tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: alien-base-types
  template_version: 2.0.0
  template_author: alien4cloud

imports:
  - tosca-normative-types:1.0.0-ALIEN20

description: Types supported by alien 4 cloud that extends the TOSCA specification.

artifact_types:
  org.alien4cloud.artifacts.BatchScript:
    derived_from: tosca.artifacts.Implementation
    description: A Windows batch script (.bat or .cmd)
    file_ext: [ bat, cmd]
  org.alien4cloud.artifacts.AnsiblePlaybook:
    derived_from: tosca.artifacts.Implementation
    mime_type: application/zip
    file_ext: [ ansible ]

capability_types:
  org.alien4cloud.capabilities.ClusterController:
    derived_from: tosca.capabilities.Root
    description: |
      This capability is used to define the ability for a node to manage a cluster of nodes.
      The management of other nodes is considered as a black box from the TOSCA orchestrator point of view. This capability should be associated with the definition on the node of the org.alien4cloud.management.ClusterControl interface to offer scale.
    properties:
      min_instances:
        type: integer
        description: >
          This property is used to indicate the minimum number of instances that should be created for the associated TOSCA Node Template by a
          TOSCA orchestrator.
        default: 1
      max_instances:
        type: integer
        description: >
          This property is used to indicate the maximum number of instances that should be created for the associated TOSCA Node Template by a
          TOSCA orchestrator.
        default: 1
      default_instances:
        type: integer
        required: false
        description: >
          An optional property that indicates the requested default number of instances that should be the starting number of instances a TOSCA orchestrator
          should attempt to allocate.
          Note: The value for this property MUST be in the range between the values set for ‘min_instances’ and ‘max_instances’ properties.
        default: 1

policy_types:
  org.alien4cloud.policies.LabelPlacement:
    abstract: true
    derived_from: tosca.policies.Placement
    description: >
      This policy instruct the orchestrator to place the targets of the policy in host nodes which label/value pairs matches the one provided in this policy "labels" property.
    properties:
      # label should be idealy a list of complex object: {key: , operator: , values: }, or at least a map of list of string. Then we shoudl assume the operator is In
      labels:
        type: map
        description: Map of key-value labels that can be used to provide arbitrary matching information.
        required: false
        entry_schema:
          type: string
  org.alien4cloud.policies.Affinity:
    abstract: true
    derived_from: tosca.policies.Placement
    description: >
      This policy instruct the orchestrator to place the targets of the policy in the same container (Same host, zone (data-center), region).
      Implementations of this policy may refine the actual level of affinity provided and may be specific to actual targets.
    properties:
      level:
        type: string
        required: false
        constraints:
          - valid_values: [ host, zone, region ]

  org.alien4cloud.policies.AntiAffinity:
    abstract: true
    derived_from: tosca.policies.Placement
    description: >
      This policy instruct the orchestrator to place the targets of the policy in different container (Same host, zone (data-center), region).
      Implementations of this policy may refine the actual level of anti-affinity provided and may be specific to actual targets.
    properties:
      level:
        type: string
        required: false
        constraints:
          - valid_values: [ host, zone, region ]

node_types:

  org.alien4cloud.nodes.Job:
    abstract: true
    derived_from: tosca.nodes.Root
    interfaces:
      tosca.interfaces.node.lifecycle.Runnable:
        run:
          description: Standard lifecycle run operation.
